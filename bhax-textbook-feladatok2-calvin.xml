<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Calvin!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

	<section>
<title>MNIST</title>
<para>Az alap feladat megoldása, +saját kézzel rajzolt képet is ismerjen fel,
https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol Háttérként ezt vetítsük le:
https://prezi.com/0u8ncvvoabcr/no-programming-programming/</para>
<para>A futtatáshoz szükségünk lesz a tensorflow library meglétére a gépen.
A telepítésre 2 módszert használtam, a packet-manager-en keresztül való telepítést és a python pip-es telepítést.
A második módszerhez a python is szükséges, viszont mindenképp le kell töltenünk azt, hiszen a program is python nyelven íródott.
A python-t a packet-manager használatával szinte pillanatok alatt feltelepíthetjük és már használatra kész.
Ennek a 3.7-es verziójára lesz szükségünk, amíg a tensorflow 2.0 vagy 1.4 között választhatunk.</para>

<figure>
            <title>
                A
                <type>pip</type>
                telepítés
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/pip.png" scale="60" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>pip</type>
                        telepítés
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>Láthatjuk a képen, hogy nálam már up-to-date a tensorflow, de ha először írjuk be a parancsot, akkor 1-2 percen át telepítgeti a szükséges fájlokat.
        <command>Fontos még megemlíteni, hogy néhány distrón permission denied lesz a vége, ha sudo nélkül, vagy su nélkül próbálkozunk az installációval, másrészlől viszont van, ahol anélkül is tökéletesen feltelepítődik.
        A biztonság kedvéért használjuk a sudo parancsot a pip előtt.</command></para>
<para>
Itt viszont fontos megjegyezni, hogy az újabb verzió nem mindíg jobb, mivel a 2.0-ás verzióban hiányoznak olyan modulok, amelyek létfontosságúak lennének a jelenlegi programunkhoz(<command>matplotlib.pyplot,
tensorflow.examples.tutorials.mnist</command>)</para>
<para>A működéshez ezeket a modulokat manuálisan kell beillesztenünk a tensorflow-core/examples mappába, vagy egyszerűen használjuk az 1.4-es verziót, amelyből nem felejtették ki ezeket :'D</para>
<para>Ha sikerült működésre bírnunk, akkor jöhet a második része a feladatnak, saját kép felismerése.
Erről a kódrészlet itt található:</para>
<programlisting language="python"><![CDATA[from matplotlib.image import imread # sajat kephez
import numpy as np # sajat kephez

img = imread('ketto.png') # csak png-t hasznalj

img_gray = 1 - img[:, :, 0] # mivel a kép fekete-fehér, ezért mind az R, G és B érték ugyanaz, így elég csak az egyiket elmenteni, mert az algoritmus 28 * 28-as formátumot igényel (és nem 28*28*4(RGBA))
testimg = np.array([img_gray]) # a predict függvénynek numpy array-ba helyezett képek kellenek, ezért mi beletesszük a miénket
predicts = model.predict(testimg) # megkérjük a model hogy tippelje meg h mit irhattunk a kepekre (nekünk csak 1 van most) és mentse el a predicts valtozozba tömbként (pl. [szerintem8, talán7, biztos3])
print("sajat kep: ")
print( np.argmax(predicts[0]) )
""" megnézzük hogy az elso (nulladik) képre mit tippelt. Ehhez szükség van az argmax függvényre, mert a model 10 értéket ad vissza egy kép tippelésekor (pl. szerinte ez 10%-ra 1-es, 20%-ra 2-es...), de nekünk csak a legnagyobb kell, amiben a legbiztosabb """]]></programlisting>
<para>Az egész forráskód megtalálható ezen a <link xlink:href="https://github.com/ghjbku/prog2/tree/master/calvin/mnist.py">linken</link></para>
<figure>
            <title>
                Az
                <type>mnist</type>
                futása
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/mnist_eredmeny.png" scale="80" />
                </imageobject>
                <textobject>
                    <phrase>
                        Az
                        <type>mnist</type>
                        futása
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>

        <figure>
            <title>
                A
                <type>kettes</type>
                
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/ketto.png" scale="600" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>kettes</type>
                        
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
	</section>
	<section>
<title>Android telefonra a TF objektum detektálója</title>
<para>Telepítsük fel, próbáljuk ki!</para>
<para>A feltelepítéséhez szükségünk van egy Android studió-ra, vagy olyan IDE-re, ami képes az Android Studio-t plugin-ként kezelni.
Én az IntelIJ IDEA programot használom erre.</para>
<para>A program működéséhez a gradle modult frissitenünk kell 4.8-as verzióra, melyet az IDE magától meg fog tenni, erre azért van szükség, mert a 4.6-os gradle nem képes a 10-es JAVA-verziószámú-tól nagyobb verziót kezelni.
Ha a gradle update megvan, akkor szinkronizálnunk kell a beimportált projektet, majd le-buildelni.
Buildelésnél le fog tölteni elég sok dependency-t, viszont ezen csak 1x kell átesnünk, azután pár másodperc alatt felépül a program.
</para>
<para>Ha kész a building, akkor futtathatjuk a programot kétféle módon, saját android eszköz használatával, vagy egy virtuális android eszköz(emulátor) segítségével.
Én saját telefon-t használtam, mivel a virtuális emuláció során nem lenne módom az eszköz kameráját használni(feltéve, ha a laptop kamerát használom helyette), másrészről pedig a virtuális eszköz használata igencsak megerőlteti szegény kis laptopomat.</para>
 <figure>
            <title>
                A
                <type>tensor</type>
                futása
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/tensor_andro.png" scale="30" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>tensor</type>
                        futása
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>A program a kamerán keresztül érzékelt objektumokról próbálja eldönteni, hogy mi látható a képen.
        Ez sokszor helyes, de lehetséges macskát felismerni az ásványvizes dobozra, szóval van még mit javítani rajta.</para>
		<figure>
            <title>
                A
                <type>tensor</type>
                futása2
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/tensor_andro2.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>tensor</type>
                        futása2
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
<para>A program tesztelése során a laptop-ot és az ásványvizes palackot ismertettem fel a szoftverrel, majd később egy debuggert is kapcsoltam hozzá, melyről a kép kicsit lentebb található meg.</para>
<figure>
            <title>
                A
                <type>tensor</type>
                futása3
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/tensor_debug.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>tensor</type>
                        futása3
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>

    <figure>
            <title>
                A
                <type>tensor</type>
                exception
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/tensor_exception.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>tensor</type>
                        exception
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>Látható, hogy a debugger hosszas tétlenség után egy exception-t dob ki (én voltam hosszú ideig tétlen, majd véletlenül kihúztam az usb kábelt :'D)
        A kábel nélkül pedig a debugger nem találta többé a portot, amin kapcsolódhad az android eszközre, tehát jöttek a vérvörös sorok.</para>
	<para>ÖSszességében szerintem elég érdekes gondolat, hogy felismertessünk dolgokat egy AI-el, élvezetes körbenézni a kamera lencséje mögött, és rádöbbenni, hogy mennyi mindent meg lehet tanítani egy kis programnak pár száz sor segítségével.</para>
    </section>


	<section>
<title>Deep MNIST</title>
<para>Mint az előző, de a mély változattal. Segítő ábra, vesd össze a forráskóddal a
https://arato.inf.unideb.hu/batfai.norbert/NEMESPOR/DE/denbatfai2.pdf 8. fóliáját!</para>
	</section>


	<section>
<title>CIFAR-10</title>
<para>Az alap feladat megoldása, +saját fotót is ismerjen fel,
https://progpater.blog.hu/2016/12/10/hello_samu_a_cifar-10_tf_tutorial_peldabol</para>
	</section>

	<section>
<title>SMNIST for Machines</title>
<para>Készíts saját modellt, vagy használj meglévőt, lásd: https://arxiv.org/abs/1906.12213</para>
	</section>


	<section>
<title>Minecraft MALMO-s példa</title>
<para><link xlink:href="https://github.com/Microsoft/malmo">A https://github.com/Microsoft/malmo</link> felhasználásával egy ágens példa, lásd pl.:
<link xlink:href="https://youtu.be/bAPSu3Rndi8">youtube</link>, <link xlink:href="https://bhaxor.blog.hu/2018/11/29/eddig_csaltunk_de_innentol_mi">bhax_blog_eddig_csaltunl</link>,
<link xlink:href="https://bhaxor.blog.hu/2018/10/28/minecraft_steve_szemuvege">bhax_szemüveg</link></para>


    <figure>
            <title>
                A
                <type>malmo</type>
                kliens futás
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/client.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>malmo</type>
                        kliens futás
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <figure>
            <title>
                A
                <type>malmo</type>
                future modul
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/future.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>malmo</type>
                        future modul
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>Ezen forráskódot hívtam segítségül a line-of-sight forrásrész megírásakor.
        Itt a képen látható, hogy van pár példa,mely a future modul nélkül nem fut le, tehát a pip-el installálnunk kellett a modult, mielőtt a scripteket futtathattuk volna.</para>
        <figure>
            <title>
                A
                <type>malmo</type>
                kliens futtatása
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/launch.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>malmo</type>
                        kliens futtatása
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>A kliens első futtatása nagyon hosszadalmas, 5-10 percet is igénybe vehet, hiszen 
        telepíti a dependency-ket, és frissíti az esetleges outdated szoftvereket.</para>
        <figure>
            <title>
                A
                <type>python</type>
                forráskód futás
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/pythonfut.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A
                        <type>python</type>
                        forráskód futás
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>Ha elindult a kliens, akkor futtathatjuk a python kódokat, a kliens indulása előtt hiába próbáljuk futtatni őket, hiszen nincs mi értelmezze a kódot.
        </para>
        <figure>
            <title>
                egy
                <type>malmo</type>
                példa
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/malmifut1.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        egy
                        <type>malmo</type>
                        példa
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>Ebben a példában a konzolból irányíthattuk a karaktert szöveges módon.Érdekes megoldás, de akkor már használjuk a billentyűzetet.</para>
        <figure>
            <title>
                A második
                <type>malmo</type>
                példa
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="calvin/malmo/malmifut2.png" scale="40" />
                </imageobject>
                <textobject>
                    <phrase>
                        A második
                <type>malmo</type>
                példa
                    </phrase>
                </textobject>
            </mediaobject>
        </figure>
<para>Ez a példa pedig egy a képen látható objektumot hozott létre a semmiből, szimpla xml kódokat használva.</para>
        <para>	<link xlink:href="https://www.youtube.com/watch?v=acG40X5RYug">youtube videó a szkript futtatásáról</link>

   </para>
   <para>A forráskód itt található:<link xlink:href=""></link></para>
 </section>

</chapter>
