<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
	
	<section>
<title>Encoding</title>
<para>

Fordítsuk le és futtassuk a Javat tanítok könyv MandelbrotHalmazNagyító.java forrását úgy, hogy a
fájl nevekben és a forrásokban is meghagyjuk az ékezetes betűket!
https://www.tankonyvtar.hu/hu/tartalom/tkt/javat-tanitok-javat/adatok.html
</para>
<figure>
            <title>A <type> mandel </type> futás</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="chomsky/encoding_fut.png" scale="250" />
				  </imageobject>
                <textobject>
                    <phrase>A <type> mandel </type> futás</phrase>
                </textobject>
            </mediaobject>
        </figure>
        <para>A képen látható, amint megpróbáljuk az encoding nélkül lefordítani a programunkat, kevés sikerrel.
        A -encoding kapcsoló használatával és a megfelelő karakterkészlettel viszont tökéletesen/hiba nélkül lefordul és lefut a program.
        A lehetséges karakterkészletek megtalálhatóak az oracle oldalán:</para><para> <link xlink:href="https://docs.oracle.com/javase/7/docs/technotes/guides/intl/encoding.doc.html">https://docs.oracle.com/javase/7/docs/technotes/guides/intl/encoding.doc.html</link>              
        </para>
        <para>
        Az általunk használt készlet a 1252-es, amit Latin-1-nek is hívnak.
        A javac -encoding nélkül általában a rendszer által használt codeset-et használja alapértelmezetten, de mivel a JVM nem igazán veszi figyelembe a helyi rendszert(hiszen virtual machine), ezért ez nem univerzális "igazság".
        Viszont az igaz, hogy a javac-ban konfigurálható az alapértelemezett enkódolási charset, és ez általában megyegyezik a helyi gépen használtal.
        A program futása folyamán ez az alapértelemezett karakterkészlet megállapítható a <command><![CDATA[Charset.defaultCharset()]]></command> parancs használatával.</para> 
</section>

<section>
<title>Full screen(ződ)</title>
<para>
Készítsünk egy teljes képernyős Java programot!
Tipp: https://www.tankonyvtar.hu/en/tartalom/tkt/javat-tanitok-javat/ch03.html#labirintus_jatek</para>
<programlisting language="java"><![CDATA[import java.awt.*;
import javax.swing.JFrame;

public class bucky extends JFrame
{
	public static void main (String[] args)
	{
	DisplayMode dm = new DisplayMode(800,600,16,DisplayMode.REFRESH_RATE_UNKNOWN);
	bucky b = new bucky();
	b.run(dm);
	}

	public void run(DisplayMode dm)

		{
		setBackground(Color.BLACK);
		setForeground(Color.WHITE);
		setFont(new Font("Arial",Font.PLAIN, 24));
	
		Screen s = new Screen();
		try{
		s.SetFullScreen(dm, this);
			try{
			Thread.sleep(2700);
			
		}catch(Exception ex){}
		}finally{
			s.RestoreScreen();
		}
	}
	 
	public void paint(Graphics g)
	{
	
	g.drawString("This...A programozásra gondolva olykor valami misztikus érzés járja ",200,200);
g.drawString("át az embert, ami további hajtóerőt és lelkesedést kölcsönöz. A sikeres oktatás ",200,300);
g.drawString("elsődleg es célja ennek átadása, ebből fejlődhet majd ki minden más, ami csak kell:",200,400); 
g.drawString(" A könyvet elsősorban\n tanári kézikönyvként ajánljuk középiskolai informatikatanároknak, de kiegészítő\n irodalomként hasznos olvasmánynak tartjuk informatikus tanárjelöltek, diákok és általában a programozni tanulni vágyók számára \negyaránt. ",200,450);
g.drawString("az ipar számára a professzionális programozó, a tudománynak és az emberiségnek a komplex problémákkal megküzdeni tudó algoritmuselmélész, az\n egyénnek és a társadalomnak a boldog és tetterős polgár. Reményeink szerint ennek az érzésnek az átadásához ezzel a digitális szakkönyvvel \nmi is hozzá tudunk járulni, miközben általában foglalkozunk \na programozással, annak elméletével és filozófiájával, majd részletesen és gyakorlatiasan az objektumorientált paradigmával, és ezen belül\n a Java programozással. Ebben a kézikönyvben\n a Java nyelvvel egy labirintus játék világának felépítése során ismerkedünk meg, a\nmi során ezt az egyszerű, példa labirintus játékot elkészítjük a weboldalon elhelyezhető appletként, mobiltelefonos és teljes képernyős\n PC-s, illetve hálózati: TCP/IP, Java Servlet\n, Java RMI és CORBA változatban is. De ezeken a labirintus témájú esettanulmányokon túl biológiai, matematikai és informatikai programozási példákkal is megismerkedhet majd \na kedves Olvasó.",200, 500);
	}
}
]]></programlisting><para>Itt látható a bucky.java fájl tartalma.
Mint láthatjuk, a program a dm objektumban inicializálja a megjelenítési beállításokat,</para>
<programlisting language="java">
<![CDATA[ DisplayMode dm = new DisplayMode(800,600,16,DisplayMode.REFRESH_RATE_UNKNOWN);]]></programlisting>
<para>
Az első két integer típus a felbontást, a harmadik a színkészletet,
az utolsó paraméter pedig a frissítési rátát állítják be, viszont az utóbbit nem tudjuk,
 ezért az REFRESH_RATE_UNKNOWN parancsot használjuk.</para>
 <programlisting language="java"><![CDATA[public void run(DisplayMode dm)

		{
            .
            .
            .
            Screen s = new Screen();
		try{
		s.SetFullScreen(dm, this);]]></programlisting>
 <para>A run metódus a program megjelenítési képét inicializálja, itt található a SetFullScreen parancs is, amely a 
 teljes-képernyős mód beállításáért felel.</para><programlisting language="java"><![CDATA[setBackground(Color.BLACK);
		setForeground(Color.WHITE);
		setFont(new Font("Arial",Font.PLAIN, 24));]]></programlisting><para>
 Itt állítjuk be a betűk típusát, méretét, illetve a betűk és a háttér színét is, melyek ebben a sorrendben fehér ill. fekete szinűek.</para>
<para>A <command>Screen s = new Screen();</command> parancs példányosítja a megjeleníteni kívánt ablakunkat.</para>
<programlisting language="java"><![CDATA[public void paint(Graphics g)
	{
	
	g.drawString("This...A programozásra gondolva olykor valami misztikus érzés járja ",200,200);
g.drawString("át az embert, ami további hajtóerőt és lelkesedést kölcsönöz. A sikeres oktatás ",200,300);
g.drawString("elsődleg es célja ennek átadása, ebből fejlődhet majd ki minden más, ami csak kell:",200,400); 
g.drawString(" A könyvet elsősorban\n tanári kézikönyvként ajánljuk középiskolai... ",200,450);
g.drawString("az ipar számára a professzionális programozó, a tudománynak ...",200, 500);
	}]]></programlisting><para>Végül pedig látható a paint metódus.
    Ez felel a képernyőre "festésért",ami ezesetben csak pár sor szöveg, de lehet ez akár ábrák, képek sokasága is, a megjeleníteni kívánt objektum szerint viszont a kód is változik, és nehézségi foka is egyre nől.
</para><para>Megoldás forrásai:<link xlink:href="https://github.com/ghjbku/prog2/tree/master/chomsky">github link</link>              
     
    </para>
<figure>
            <title>A <type> fullscreen </type> futás</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="chomsky/fullscreen.png" scale="150" />
				  </imageobject>
                <textobject>
                    <phrase>A <type> fullscreen </type> futás</phrase>
                </textobject>
            </mediaobject>
        </figure> 
</section>

<section>
<title>Paszigráfia Rapszódia OpenGL full screen vizualizáció</title>
<para>
Lásd vis_prel_para.pdf! Apró módosításokat eszközölj benne, pl. színvilág, textúrázás, a szintek jobb
elkülönítése, kézreállóbb irányítás.
</para>
<para>A program módosítás szempontjából az alábbiakon esett át:
színvilág változtatás, mostantól a kockák teste kék színű.
Az irányítás kézreállóságának biztosítása: wasd billentyűk használhatóak a nyilak funkciójának ellátásához, továbbá a Z irányú mozgásra (ami eddig a page up és page down bill.-el történt), most a q és e billentyűk szolgálhatnak.
A Forgatási sebesség pozitív irányban meg lett növelve, korrigálhatóság miatt a negatív irány azonos értéken maradt.
A régi irányítás is működik, esetleges használati kényelmetlenségek elkerülése végett.</para>
<programlisting language="c++"><![CDATA[void keyboard ( unsigned char key, int x, int y )
{
    .
    .
    .
    .
       else if( key == 'w' ) {
                cubeLetters[index].rotx += 25.0;
        } else if ( key == 's') {
                cubeLetters[index].rotx -= 5.0;
        } else if ( key == 'd' ) {
                cubeLetters[index].roty -= 5.0;
        } else if ( key == 'a' ) {
                cubeLetters[index].roty += 25.0;
        } else if ( key == 'q' ) {
                cubeLetters[index].rotz += 25.0;
        } else if ( key == 'e' ) {
                cubeLetters[index].rotz -= 5.0;
        }

        glutPostRedisplay();
}]]></programlisting>
<para>itt látható az irányításra szolgáló billentyűk kiosztásának a kódrészlete, emellett pedig a forgatások sebességét is láthatjuk a kódrészleten.
</para>
<para>a program lefordításához a következő kapcsolók kellenek:
g++ para6.cpp -o para <command> -lboost_system -lGL -lGLU -lglut</command></para>
<figure>
            <title>A <type> fullscreen </type> futás</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="chomsky/rapszodia2.png" scale="150" />
				  </imageobject>
                <textobject>
                    <phrase>A <type> fullscreen </type> futás</phrase>
                </textobject>
            </mediaobject>
        </figure> 
<para>Az lboost_system library a boost-nak a használata miatt szükséges, az lGL, az lGLU ls az lglut kapcsolók pedig az openGL könyvtárai, hiszen az openGL-t használva jelenítettük meg a kockákat, ezért ezekre is szükségünk volt.
Érdekes viszont megfigyelnünk, hogy az glut(opengl utility toolkit) támogatása már több,mint 15 éve lejárt, ehelyett a freeglut-ot használják manapság az openGL programok írásánál,
viszont ez a jelenlegi programunkat nem befolyásolja, a megfelelő library-k segítségével tökéletesen működőképes.
A freeglut megtalálható itt:<link xlink:href="http://freeglut.sourceforge.net/">http://freeglut.sourceforge.net/</link></para>
           
 
</section>


<section>
<title>l334d1c4<superscript>5</superscript> (ződ)</title>
<para>
Írj olyan OO Java vagy C++ osztályt, amely leet cipherként működik, azaz megvalósítja ezt a betű
helyettesítést: https://simple.wikipedia.org/wiki/Leet (Ha ez első részben nem tetted meg, akkor írasd
ki és magyarázd meg a használt struktúratömb memóriafoglalását!)</para>

<para>A cipher java-ban.</para>
<programlisting language="java"><![CDATA[import java.util.Scanner;
import java.util.Vector;
import java.util.HashMap;
import java.util.Random;
import java.util.Map.Entry;   
]]></programlisting>
<para>A program "backbone"-ja a leet hashmap, amely a "betűket társítja a számokkal és egyéb karakterekkel.
A fontossági sorrendben a következő maga a translate funkció, amely a szó összes karakterén végighalad a for-ciklussal, míg a szó végéhez nem ér, és kicseréli a karaktert egy random választott számmal a map-ből.</para>
<programlisting language="java"><![CDATA[private HashMap<String, String[]> leet = new HashMap<String, String[]>() {{
		put("a", new String[] { "4", "4", "@", "-" });
		put("b", new String[] { "b", "8", "3", "}" });
		put("c", new String[] { "c", "(", "", "{" });
		put("d", new String[] { "d", ")", "]", "}" });
		put("e", new String[] { "3", "3", "3", "3" });
		put("f", new String[] { "f", "=", "ph", "#" });
		put("g", new String[] { "g", "6", "[", "[+" });
		put("h", new String[] { "h", "4", "-", "[-]" });
		put("i", new String[] { "1", "1", "", "!" });
		put("j", new String[] { "j", "7", "_", "_" });
		put("k", new String[] { "k", "", "1", "{" });
		put("l", new String[] { "l", "1", "", "_" });
		put("m", new String[] { "m", "44", "(V)", "" });
		put("n", new String[] { "n", "", "", "V" });
		put("o", new String[] { "0", "0", "()", "[]" });
		put("p", new String[] { "p", "o", "D", "o" });
		put("q", new String[] { "q", "9", "O_", "(,)" });
		put("r", new String[] { "r", "12", "12", "2" });
		put("s", new String[] { "s", "5", "$", "$" });
		put("t", new String[] { "t", "7", "7", "''" });
		put("u", new String[] { "u", "_", "(_)", "[_]" });
		put("v", new String[] { "v", "", "", "" });
		put("w", new String[] { "w", "VV", "", "()" });
		put("x", new String[] { "x", "%", ")(", ")(" });
		put("y", new String[] { "y", "", "", "" });
		put("z", new String[] { "z", "2", "7_", "_" });

		put("0", new String[] { "D", "0", "D", "0" });
		put("1", new String[] { "I", "I", "L", "L" });
		put("2", new String[] { "Z", "Z", "Z", "e" });
		put("3", new String[] { "E", "E", "E", "E" });
		put("4", new String[] { "h", "h", "A", "A" });
		put("5", new String[] { "S", "S", "S", "S" });
		put("6", new String[] { "b", "b", "G", "G" });
		put("7", new String[] { "T", "T", "j", "j" });
		put("8", new String[] { "X", "X", "X", "X" });
		put("9", new String[] { "g", "g", "j", "j" });
	}};

     public Leet translate() {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < word.length(); ++i) {
            char c = word.charAt(i);
            String loc = Character.toString(Character.toLowerCase(c));
            if (leet.containsKey(loc))
            	sb.append(leet.get(loc)[rand.nextInt(leet.get(loc).length)]);
            else
            	sb.append(c);
        }
		this.sb = sb.toString();
		
		return this;
	}
]]></programlisting>
    <programlisting language="java"><![CDATA[public static void main(String[] args) {
       String wordvect;
       Scanner scan = new Scanner(System.in);
       String word;
       String question;
       boolean questionbool = true;]]></programlisting>
       <para>A main függvényben példányosítjuk a wordvect objektumot, majd egy szöveg-scannert inicializálunk, 
       melyel majd a szavakat kérjük be a felhasználótól.</para>
       <programlisting language='java'><![CDATA[while(questionbool=true)
      {
       questionbool=false;
       System.out.println("irj be egy szót!");
       word=scan.nextLine();
       System.out.println("szó: "+word);
       
       wordvect=(new Leet(word).translate().getLeet());
       System.out.println(wordvect);
       ]]></programlisting><para>a <command>word=scan.nextLine();</command> sor kéri be a word változóba a szót,a <command>translate();</command> függvény pedig magáért a lefordításért felelős, majd a getleet függvénnyel visszaadjuk a lefordított szót.
</para>
       <figure>
            <title>A <type> fullscreen </type> futás</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="chomsky/leet.png" scale="100" />
				  </imageobject>
                <textobject>
                    <phrase>A <type> fullscreen </type> futás</phrase>
                </textobject>
            </mediaobject>
        </figure> 
</section>


</chapter>
